import React from 'react';
import { MongoClient, ObjectId } from 'mongodb';
import Head from 'next/head';
import Image from 'next/image';
import classes from './index.module.css';

export default function MeetupDetails(props) {
  return (
    <>
      <Head>
        <title>{props.data.title}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <div>
        <div className={classes.image}>
          <Image src={props.data.image} layout="fill" alt={props.data.title} />
        </div>
        <h1>{props.data.title}</h1>
        <address>{props.data.address}</address>
        <p>{props.data.description}</p>
      </div>
    </>
  );
}

export async function getStaticPaths() {
  // Fetch data here
  const client = await MongoClient.connect(`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@cluster0.iyljx.mongodb.net/meetups?retryWrites=true&w=majority`);
  const db = client.db();
  const meetupsCollection = db.collection('meetups');
  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();

  client.close();

  return {
    fallback: false,
    paths: meetups.map((meetup) => ({
      params: { meetupId: meetup._id.toString() },
    })),
  };
}

export async function getStaticProps(context) {
  const meetupId = context.params.meetupId;

  // Fetch data here
  const client = await MongoClient.connect(`mongodb+srv://${process.env.DB_USER}:${process.env.DB_PASS}@cluster0.iyljx.mongodb.net/meetups?retryWrites=true&w=majority`);
  const db = client.db();
  const meetupsCollection = db.collection('meetups');
  const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });

  client.close();

  return {
    props: {
      data: {
        id: selectedMeetup._id.toString(),
        title: selectedMeetup.title,
        address: selectedMeetup.address,
        image: selectedMeetup.image,
        description: selectedMeetup.description,
      },
    },
  };
}
